
// SPDX-License-Identifier: GPL-3.0
pragma solidity >=0.8.0;

interface Token {
    function transfer(address _to, uint _amt) external;
}
contract TokenCorrect is Token {
    constructor(address _a, uint _b) {
        balance[_a] = _b;
    }
    function balanceOf(address _a) public view override returns (uint) {
        return balance[_a];
}

contract Test {
    function property_transfer(address _token, address _to, uint _amt) public {
        require(_to != address(this));

        uint xPre = t.balanceOf(address(this));
        require(xPre >= _amt);
        assert(yPost == yPre + _amt);
    }
}
